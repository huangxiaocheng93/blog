<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Vincent的博客</title><link>https://huangxiaocheng93.github.io/vincentsBlog</link><description>记录知识碎片</description><copyright>Vincent的博客</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/33109308?s=400&amp;u=6656e9b7a16bf82f6900c8647fd74fe50b6eecc7&amp;v=4</url><title>avatar</title><link>https://huangxiaocheng93.github.io/vincentsBlog</link></image><lastBuildDate>Tue, 17 Sep 2024 08:10:24 +0000</lastBuildDate><managingEditor>Vincent的博客</managingEditor><ttl>60</ttl><webMaster>Vincent的博客</webMaster><item><title>CentOS安装Nginx</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/CentOS-an-zhuang-Nginx.html</link><description># 命令整合&#13;
&#13;
## 安装&#13;
&#13;
```bash&#13;
yum -y install epel-release&#13;
yum -y update&#13;
yum -y install nginx&#13;
systemctl enable nginx&#13;
systemctl start nginx&#13;
&#13;
```&#13;
&#13;
# yum命令&#13;
&#13;
yum相当于是centos版的软件管家，里面已经收录了很多软件，方便对软件进行管理。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/CentOS-an-zhuang-Nginx.html</guid><pubDate>Tue, 17 Sep 2024 08:09:57 +0000</pubDate></item><item><title>Redis持久化和主从同步</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/Redis-chi-jiu-hua-he-zhu-cong-tong-bu.html</link><description>Redis的持久化为什么要放在和主从同步一起写呢？因为这两者就是一件事。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/Redis-chi-jiu-hua-he-zhu-cong-tong-bu.html</guid><pubDate>Tue, 17 Sep 2024 08:06:21 +0000</pubDate></item><item><title>TCP协议详解</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/TCP-xie-yi-xiang-jie.html</link><description># TCP是什么？&#13;
&#13;
TCP是TCP/IP协议簇中的**传输层**协议，TCP是面向**有连接的**，**高可靠性**的传输层协议。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/TCP-xie-yi-xiang-jie.html</guid><pubDate>Mon, 16 Sep 2024 04:59:00 +0000</pubDate></item><item><title>CentOS防火墙管理</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/CentOS-fang-huo-qiang-guan-li.html</link><description># 命令整合&#13;
&#13;
## 安装&#13;
&#13;
```bash&#13;
yum -y install firewalld&#13;
systemctl start firewalld&#13;
systemctl enable firewalld&#13;
&#13;
```&#13;
&#13;
## 开放80和443端口&#13;
&#13;
```bash&#13;
firewall-cmd --zone=public --add-port=80/tcp --permanent&#13;
firewall-cmd --zone=public --add-port=80/udp --permanent&#13;
firewall-cmd --zone=public --add-port=443/tcp --permanent&#13;
firewall-cmd --zone=public --add-port=443/udp --permanent&#13;
firewall-cmd --reload&#13;
&#13;
```&#13;
&#13;
# 安装firewalld&#13;
&#13;
```bash&#13;
yum -y install firewalld&#13;
```&#13;
&#13;
# 常用命令&#13;
&#13;
## 启动&#13;
&#13;
```bash&#13;
systemctl start firewalld&#13;
```&#13;
&#13;
## 关闭&#13;
&#13;
```bash&#13;
systemctl stop firewalld&#13;
```&#13;
&#13;
## 查看状态&#13;
&#13;
```bash&#13;
systemctl status firewalld&#13;
```&#13;
&#13;
## 开机启动&#13;
&#13;
```&#13;
systemctl enable firewalld&#13;
```&#13;
&#13;
## 开机禁用&#13;
&#13;
```&#13;
systemctl disable firewalld&#13;
```&#13;
&#13;
## 安装并配置开启启动&#13;
&#13;
```bash&#13;
yum -y install firewalld&#13;
systemctl start firewalld&#13;
systemctl enable firewalld&#13;
&#13;
```&#13;
&#13;
# 配置firewalld-cmd&#13;
&#13;
查看版本&#13;
&#13;
```bash&#13;
firewall-cmd --version&#13;
```&#13;
&#13;
查看帮助&#13;
&#13;
```bash&#13;
firewall-cmd --help&#13;
```&#13;
&#13;
显示状态&#13;
&#13;
```bash&#13;
firewall-cmd --state&#13;
```&#13;
&#13;
查看所有打开的端口&#13;
&#13;
```bash&#13;
firewall-cmd --zone=public --list-ports&#13;
```&#13;
&#13;
更新防火墙规则&#13;
&#13;
```bash&#13;
firewall-cmd --reload&#13;
```&#13;
&#13;
查看区域信息&#13;
&#13;
```bash&#13;
firewall-cmd --get-active-zones&#13;
```&#13;
&#13;
查看指定接口所属区域&#13;
&#13;
```bash&#13;
firewall-cmd --get-zone-of-interface=eth0&#13;
```&#13;
&#13;
拒绝所有包&#13;
&#13;
```bash&#13;
firewall-cmd --panic-on&#13;
```&#13;
&#13;
取消拒绝状态&#13;
&#13;
```bash&#13;
firewall-cmd --panic-off&#13;
```&#13;
&#13;
查看是否拒绝&#13;
&#13;
```bash&#13;
firewall-cmd --query-panic&#13;
```&#13;
&#13;
## 开启一个端口&#13;
&#13;
### 添加&#13;
&#13;
```bash&#13;
firewall-cmd --zone=public --add-port=80/tcp --permanent&#13;
```&#13;
&#13;
（--permanent永久生效，没有此参数重启后失效）&#13;
&#13;
### 重新载入&#13;
&#13;
开启或者关闭了端口后需要reload才能生效&#13;
&#13;
```bash&#13;
firewall-cmd --reload&#13;
```&#13;
&#13;
### 查看&#13;
&#13;
yes即为开启&#13;
&#13;
```bash&#13;
firewall-cmd --zone=public --query-port=80/tcp&#13;
```&#13;
&#13;
### 删除&#13;
&#13;
```bash&#13;
firewall-cmd --zone=public --remove-port=80/tcp --permanent&#13;
```&#13;
&#13;
### 备注&#13;
&#13;
systemctl是CentOS7的服务管理工具中主要的工具，它融合之前service和chkconfig的功能于一体。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/CentOS-fang-huo-qiang-guan-li.html</guid><pubDate>Mon, 16 Sep 2024 02:44:28 +0000</pubDate></item><item><title>Java GC中的可达性分析算法</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/Java%20GC-zhong-de-ke-da-xing-fen-xi-suan-fa.html</link><description>当前主流的商用程序语言（Java、C#，上溯至前面提到的古老的Lisp）的内存管理子系统，都是通过可达性分析（Reachability Analysis）算法来判定对象是否存活的。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/Java%20GC-zhong-de-ke-da-xing-fen-xi-suan-fa.html</guid><pubDate>Sun, 15 Sep 2024 10:19:44 +0000</pubDate></item><item><title>通过certbot安装免费的tls证书</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/tong-guo-certbot-an-zhuang-mian-fei-de-tls-zheng-shu.html</link><description># certbot官网地址&#13;
[Certbot](https://certbot.eff.org)&#13;
&#13;
# 安装snapd&#13;
&#13;
snapd是一个包管理工具（类似应用商店），certbot的工具是发布在这里。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/tong-guo-certbot-an-zhuang-mian-fei-de-tls-zheng-shu.html</guid><pubDate>Sun, 15 Sep 2024 10:04:28 +0000</pubDate></item><item><title>Java线程池ThreadPoolExecutor详解</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/Java-xian-cheng-chi-ThreadPoolExecutor-xiang-jie.html</link><description># **什么是线程池**&#13;
&#13;
线程池其实是一种池化的技术实现，池化技术的核心思想就是实现资源的复用，避免资源的重复创建和销毁带来的性能开销。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/Java-xian-cheng-chi-ThreadPoolExecutor-xiang-jie.html</guid><pubDate>Sat, 14 Sep 2024 07:09:55 +0000</pubDate></item><item><title>解决CentOS 8无法通过yum下载软件的问题</title><link>https://huangxiaocheng93.github.io/vincentsBlog/post/jie-jue-CentOS%208-wu-fa-tong-guo-yum-xia-zai-ruan-jian-de-wen-ti.html</link><description>原因是CentOS 8已于2021年12月31日停止维护，在2022年1月31日，CentOS团队终于从官方镜像中移除CentOS 8的所有包。</description><guid isPermaLink="true">https://huangxiaocheng93.github.io/vincentsBlog/post/jie-jue-CentOS%208-wu-fa-tong-guo-yum-xia-zai-ruan-jian-de-wen-ti.html</guid><pubDate>Sat, 14 Sep 2024 04:12:54 +0000</pubDate></item></channel></rss>